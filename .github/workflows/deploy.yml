name: Deploy em Development

# Este workflow é acionado em push na branch "main" ou "development".
on:
  push:
    branches:
      - master

permissions:
  contents: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout do código
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Obtenha os primeiros 7 caracteres do hash do commit
      - name: Get short commit hash
        id: vars
        run: echo "COMMIT_HASH=$(git rev-parse --short=7 HEAD)" >> $GITHUB_ENV

      # 3. Login no Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_SECRET_USER }}
          password: ${{ secrets.DOCKERHUB_SECRET_PWD }}

      # 4. Build e push da imagem Docker
      - name: Build and push Docker image
        run: |
          IMAGE_NAME=minha-marmita
          docker build -t $IMAGE_NAME:${{ env.COMMIT_HASH }} .
          docker tag $IMAGE_NAME:${{ env.COMMIT_HASH }} iscodand/$IMAGE_NAME:${{ env.COMMIT_HASH }}
          docker push iscodand/$IMAGE_NAME:${{ env.COMMIT_HASH }}

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          script: |
            docker login -u ${{ secrets.DOCKERHUB_SECRET_USER }} -p ${{ secrets.DOCKERHUB_SECRET_PWD }}
            docker pull iscodand/minha-marmita:${{ env.COMMIT_HASH }}
            cd ../projects/soraya-management
            docker run --env ASPNETCORE_ENVIRONMENT=Development --name minha-marmita -d iscodand/minha-marmita:${{ env.COMMIT_HASH }}

      # 5. Notificação de sucesso
      - name: Notify deployment success
        run: echo "Deployment successful with commit ${{ env.COMMIT_HASH }}"
