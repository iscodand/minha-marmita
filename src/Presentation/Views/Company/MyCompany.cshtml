@using Presentation.ViewModels.Company;
@model CompanyViewModel;

@{
    var company = Model.Company;
    var data = Model.Data;
    ViewData["Title"] = $"Empresa - {company.Name}";
    Layout = "_Layout";

    int totalOrders = data.Orders.Count();
    decimal total = data.Orders.Select(x => x.Price).Sum();
    decimal totalPaid = data.Orders.Where(x => x.IsPaid).Select(x => x.Price).Sum();
    decimal totalToPay = data.Orders.Where(x => !x.IsPaid).Select(x => x.Price).Sum();
}

@functions {
    public string formatPrice(decimal value)
    {
        return $"{value.ToString("0.00")}";
    }
}

<script src="~/js/utils/pagination.js"></script>
<script src="~/js/charts-templates/doughnutChart.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<div class="mb-6">
    <button class="focus:outline-none text-white bg-green-400 font-medium rounded-lg px-5 py-0.5 me-2 mb-2">
        Ativa
    </button>

    <h1 class="text-3xl font-bold">@company.Name</h1>
    <p>CNPJ: <b>@company.CNPJ</b></p>
</div>

<div class="grid grid-cols-1 lg:grid-cols-1 gap-6 mb-10">
    <div class="bg-white p-4 shadow rounded-lg">
        <div class="flex justify-center items-center">
            <div>
                <h1 class="text-2xl font-bold">Dashboard</h1>
                <span class="italic text-sm">Dados dos Últimos 30 dias</span>
            </div>
        </div>
    </div>

    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-2">
        <div class="bg-white p-6 shadow rounded-lg">
            <div class="flex justify-between">
                <div>
                    <div class="text-gray-700 text-sm">Novos Pedidos</div>
                    <div class="text-3xl font-bold mt-2">@totalOrders</div>
                </div>

                <div class="bg-blue-500 text-white rounded-full p-3 w-12 h-12 flex items-center justify-center mt-2">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24"
                        stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M2.25 3h1.386c.51 0 .955.343 1.087.835l.383 1.437M7.5 14.25a3 3 0 0 0-3 3h15.75m-12.75-3h11.218c1.121-2.3 2.1-4.684 2.924-7.138a60.114 60.114 0 0 0-16.536-1.84M7.5 14.25 5.106 5.272M6 20.25a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0Zm12.75 0a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0Z" />
                    </svg>
                </div>
            </div>
        </div>

        <div class="bg-white p-6 shadow rounded-lg">
            <div class="flex justify-between">
                <div>
                    <div class="text-gray-700 text-sm">Total Vendido</div>
                    <div class="text-3xl font-bold mt-2">R$ @formatPrice(total)</div>
                </div>

                <div class="bg-blue-500 text-white rounded-full p-3 w-12 h-12 flex items-center justify-center mt-2">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24"
                        stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M2.25 18.75a60.07 60.07 0 0 1 15.797 2.101c.727.198 1.453-.342 1.453-1.096V18.75M3.75 4.5v.75A.75.75 0 0 1 3 6h-.75m0 0v-.375c0-.621.504-1.125 1.125-1.125H20.25M2.25 6v9m18-10.5v.75c0 .414.336.75.75.75h.75m-1.5-1.5h.375c.621 0 1.125.504 1.125 1.125v9.75c0 .621-.504 1.125-1.125 1.125h-.375m1.5-1.5H21a.75.75 0 0 0-.75.75v.75m0 0H3.75m0 0h-.375a1.125 1.125 0 0 1-1.125-1.125V15m1.5 1.5v-.75A.75.75 0 0 0 3 15h-.75M15 10.5a3 3 0 1 1-6 0 3 3 0 0 1 6 0Zm3 0h.008v.008H18V10.5Zm-12 0h.008v.008H6V10.5Z" />
                    </svg>
                </div>
            </div>
        </div>

        <div class="bg-white p-6 shadow rounded-lg">
            <div class="flex justify-between">
                <div>
                    <div class="text-gray-700 text-sm">Total Pago</div>
                    <div class="text-3xl font-bold mt-2">R$ @formatPrice(totalPaid)</div>
                </div>

                <div class="bg-blue-500 text-white rounded-full p-3 w-12 h-12 flex items-center justify-center mt-2">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24"
                        stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M4.5 10.5 12 3m0 0 7.5 7.5M12 3v18" />
                    </svg>
                </div>
            </div>
        </div>

        <div class="bg-white p-6 shadow rounded-lg">
            <div class="flex justify-between">
                <div>
                    <div class="text-gray-700 text-sm">Total a Receber</div>
                    <div class="text-3xl font-bold mt-2">R$ @formatPrice(totalToPay)</div>
                </div>


                <div class="bg-blue-500 text-white rounded-full p-3 w-12 h-12 flex items-center justify-center mt-2">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24"
                        stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M19.5 13.5 12 21m0 0-7.5-7.5M12 21V3" />
                    </svg>
                </div>
            </div>
        </div>
    </div>

    <!-- Charts Section -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
        <div class="bg-white p-6 rounded-lg shadow-lg">
            <div class="flex gap-3">
                <h2 class="text-xl font-bold mb-4">Sabores mais pedidos</h2>
            </div>

            <div class="chart-container flex justify-center mt-3">
                <canvas id="meals-chart" style="max-width: 400px; max-height: 430px;"></canvas>
            </div>
        </div>

        <div class="bg-white p-6 rounded-lg shadow-lg">
            <div class="flex gap-3">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"
                    stroke="currentColor" class="size-6">
                    <path stroke-linecap="round" stroke-linejoin="round"
                        d="M18 18.72a9.094 9.094 0 0 0 3.741-.479 3 3 0 0 0-4.682-2.72m.94 3.198.001.031c0 .225-.012.447-.037.666A11.944 11.944 0 0 1 12 21c-2.17 0-4.207-.576-5.963-1.584A6.062 6.062 0 0 1 6 18.719m12 0a5.971 5.971 0 0 0-.941-3.197m0 0A5.995 5.995 0 0 0 12 12.75a5.995 5.995 0 0 0-5.058 2.772m0 0a3 3 0 0 0-4.681 2.72 8.986 8.986 0 0 0 3.74.477m.94-3.197a5.971 5.971 0 0 0-.94 3.197M15 6.75a3 3 0 1 1-6 0 3 3 0 0 1 6 0Zm6 3a2.25 2.25 0 1 1-4.5 0 2.25 2.25 0 0 1 4.5 0Zm-13.5 0a2.25 2.25 0 1 1-4.5 0 2.25 2.25 0 0 1 4.5 0Z" />
                </svg>
                <h2 class="text-xl font-bold mb-4">Melhores clientes</h2>
            </div>

            <div class="chart-container flex justify-center mt-3">
                <canvas id="customers-chart" style="max-width: 400px; max-height: 430px;"></canvas>
            </div>
        </div>
    </div>

    @* Seção de Funcionários *@

    <div class="bg-white p-4 shadow rounded-lg">
        <div class="flex justify-center items-center">
            <div>
                <h1 class="text-2xl font-bold">Funcionários</h1>
                <span class="italic text-sm">@company.Employees.Count() Funcionários ativos</span>
            </div>
        </div>
    </div>

    <div class="bg-white p-6 rounded-lg shadow-lg">
        <div class="relative overflow-x-auto">
            <table class="w-full text-sm text-left rtl:text-right text-gray-500">
                <thead class="text-xs text-gray-700 uppercase bg-gray-100">
                    <tr>
                        <th scope="col" class="px-6 py-3 rounded-s-lg">
                            Nome
                        </th>
                        <th scope="col" class="px-6 py-3">
                            Email
                        </th>
                        <th scope="col" class="px-6 py-3">
                            Usuário
                        </th>
                        <th scope="col" class="px-6 py-3">
                            Cargos
                        </th>
                        <th scope="col" class="px-6 py-3 rounded-e-lg">
                            Ações
                        </th>
                    </tr>
                </thead>

                @if (!company.Employees.Any())
                {
                    <tbody>
                        <tr>
                            <td colspan="7" class="text-center p-6">
                                <p class="text-gray-500 text-lg mt-4">Nenhum funcionário encontrado</p>
                            </td>
                        </tr>
                    </tbody>
                }
                else
                {
                    <tbody>
                        @foreach (var employee in company.Employees)
                        {
                            <tr class="bg-white">
                                <th scope="row" class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap">
                                    @employee.Name
                                </th>
                                <td class="px-6 py-4">
                                    @employee.Email
                                </td>
                                <td class="px-6 py-4">
                                    @employee.Username
                                </td>
                                <td class="px-6 py-4">
                                    @employee.Roles
                                </td>
                                <td scope="row" class="flex gap-10 px-6 py-4">
                                    <a asp-controller="Employee" asp-action="UpdateEmployee"
                                        asp-route-employeeUsername="@employee.Username"
                                        class="bg-blue-500 hover:bg-blue-600 text-white py-2 px-4 rounded">
                                        Detalhes
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                }
            </table>
        </div>
    </div>
</div>

<script>
    console.log(@Json.Serialize(data.Meals));
    const mealsJsonData = @Json.Serialize(data.Meals);
    const mealsLabels = mealsJsonData.map(item => item.description);
    const mealsData = mealsJsonData.map(item => item.ordersCount);
    generateDoughnutChart("meals-chart", mealsData, mealsLabels);

    const customersJsonData = @Json.Serialize(data.Customers)
        console.log(customersJsonData);
    const customersLabels = customersJsonData.map(item => item.name);
    const customersData = customersJsonData.map(item => item.ordersCount);
    generateDoughnutChart("customers-chart", customersData, customersLabels);
</script>