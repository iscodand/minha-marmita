@model List<SorayaManagement.ViewModels.GetOrderViewModel>;

@{
    ViewData["Title"] = "Pedidos";
    Layout = "_Layout";
}

@await Component.InvokeAsync("Menu")

<section class="container">

    <div>
        <h3 id="orders-data-date" class="fw-bolder">
            Dados dos Pedidos - @DateTime.Today.Date.ToString("dd/MM/yyyy")
        </h3>
    </div>

    <div class="container">
        <div class="row">

            <div class="col-md-2">
                <div class="box-orders">
                    <h2 id="new-orders-count">@Model.Count</h2>
                    <p>Novos Pedidos</p>
                </div>
            </div>

            <div class="col-md-2">
                <div class="box-orders">
                    <h2 id="price-orders-sum">
                        R$ @Math.Round(Model.Where(x => x.IsPaid == true).Sum(x => x.Price), 2)
                    </h2>
                    <p>Total de Lucro</p>
                </div>
            </div>

            <div class="col-md-2">
                <div class="box-orders">
                    <h2 id="paid-orders-count">@Model.Where(x => x.IsPaid == true).Count()</h2>
                    <p>Pedidos Pagos</p>
                </div>
            </div>

            <div class="col-md-2">
                <div class="box-orders">
                    <h2 id="unpaid-orders-count">@Model.Where(x => x.IsPaid == false).Count()</h2>
                    <p>Pedidos NÃO Pagos</p>
                </div>
            </div>
        </div>

        <hr>

        <div class="row">

            <div class="col-md-4" style="padding-top: 30px">
                <a class="btn btn-primary-custom btn-lg" asp-controller="Order" asp-action="Create">
                    + Novo Pedido
                </a>
            </div>

            <div class="col-md-4" style="padding-left: 175px">
                <label for="payment-filter" class="form-label fw-thin">PAGAMENTO:</label>
                <select id="payment-filter" name="payment-filter" class="form-select form-select-lg form-control"
                    style="width: 250px;">
                    <option value="all">Todos</option>
                    <option value="paid">Pagos</option>
                    <option value="unpaid">Não Pagos</option>
                </select>
            </div>

            <div class="col-md-4">
                <form id="filterByDate-form" asp-controller="Order" asp-action="Orders" method="GET">
                    <label for="createdAt" class="form-label fw-thin">DATA:</label>
                    <input id="createdAt" name="createdAt" type="date" class="form-control form-control-lg">
                </form>
            </div>

        </div>

        <hr>
        <table id="orders-table" class="styled-table table">
            <thead>
                <tr class="table-head-row">
                    <th>Detalhes</th>
                    <th>Data do Pedido</th>
                    <th>Cliente</th>
                    <th>Sabor</th>
                    <th>Valor</th>
                    <th>Forma de Pagamento</th>
                    <th>Pago</th>
                </tr>
            </thead>
            <tbody id="orders-tableBody" class="table-group-divider">
                @foreach (var order in Model)
                {
                    <tr class="table-row">
                        <td>
                            <a href="pedidos/detalhes/@order.Id" class="show-details" data-order-id="@order.Id">
                                <i class="fa-solid fa-circle-info fa-lg"></i>
                            </a>
                        </td>
                        <td id="createdAt-order">@order.CreatedAt.Date.ToString("dd/MM/yyyy")</td>
                        <td>@order.Customer</td>
                        <td>@order.Meal</td>
                        <td id="order-price"><b>R$</b> @Math.Round(@order.Price, 2)</td>
                        <td>
                            @if (@order.PaymentType.Equals("PIX"))
                            {
                                <i class="fa-brands fa-pix fa-xl" style="color: #1f513e;"></i>
                            }
                            else
                            {
                                <i class="fa-solid fa-money-bill-wave fa-xl" style="color: #1f513e;"></i>
                            }
                        </td>
                        <td>
                            @if (!order.IsPaid)
                            {
                                <form asp-action="MarkOrderAsPaid" method="post">
                                    <input type="hidden" name="orderId" value="@order.Id" />
                                    <button type="submit" class="btn btn-sm btn-success">Marcar como Pago</button>
                                </form>
                            }
                            else
                            {
                                <i id="isPaid-icon" class="fa-solid fa-square-check fa-xl"></i>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <div id="order-details-modal-card" class="hidden">
        </div>

        <div id="modal-backdrop" class="modal-backdrop hidden"></div>

</section>

<script>
    $(document).ready(function () {
        $('.show-details').on('click', function (e) {
            e.preventDefault();

            const orderId = $(this).data('order-id');
            const orderDetailsCard = $('#order-details-modal-card');
            const backdrop = $('.modal-backdrop');

            $.ajax({
                url: `/pedidos/detalhes/${orderId}`,
                type: 'GET',
                success: function (data) {
                    orderDetailsCard.html(data);
                    orderDetailsCard.removeClass('hidden');
                    backdrop.removeClass('hidden');
                },
                error: function () {
                    alert('Ocorreu um erro ao carregar os detalhes da ordem.');
                }
            });
        });
    });
</script>